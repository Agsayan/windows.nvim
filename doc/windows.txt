==============================================================================
CONFIGURATION

DEFAULT SETTINGS
------------------------------------------------------------------------------
require("windows").setup({
   autowidth = {			--		     |windows.autowidth|
      enable = true,
      winwidth = 5,			--		      |windows.winwidth|
      filetype = {			--	    |windows.autowidth.filetype|
         help = 2,
      },
   },
   ignore = {				--			|windows.ignore|
      buftype = { "quickfix" },
      filetype = { "NvimTree", "neo-tree", "undotree", "NeogitStatus" }
   },
   animation = {			--		     |windows.animation|
      duration = 300,
      easing = "in_out_sine"
   }
})
------------------------------------------------------------------------------

autowidth		table				   *windows.autowidth*

	enable		boolean
			default: `true`
							    *windows.winwidth*
	winwidth	number
			default: `5`

		< 0	    Negative values will be treated as number of
			    columns to subtract from the |textwidth|.

		0	    Set current window width to |textwidth|. If
			    |textwidth| is 0, assumed |textwidth| to 80.

		0 < n < 1   The value between 0 to 1 will be considered as the
			    fraction of the totall Vim window width.

		1 < n < 2   Values between 1 and 2 will be considered as the
			    fraction of the |textwidth|.  For example: >
				winwidth = 1.3
<        		    set split width to >
				1.3 * &textwidth
<
		1, >= 2	    Will be treated as number of columns additional to
			    |textwidth|.  For example: `winwidth = 5` set split
			    width to `&textwidth + 5`

						  *windows.autowidth.filetype*
	filetype	table<string, number>
		Allow to set |windows.winwidth| per 'filetype' specific.

							      *windows.ignore*
ignore			{ `buftype`: string[], `filetype`: string[] }
		'buftype's and 'filetype's that will be ignored durign
		resizing.

							   *windows.animation*
animation		table | `false`
		If `false` then animation will be disabled.

	duration	integer (milliseconds)
			default: `300`
		The duration of the animation in milliseconds.

------------------------------------------------------------------------------
 vim:ft=help:tw=78:ts=8:noet:norl:
